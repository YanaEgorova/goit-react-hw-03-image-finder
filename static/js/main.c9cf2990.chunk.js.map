{"version":3,"sources":["components/Searchbar/SearchBar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Notification.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGallery","children","ImageGalleryItem","src","alt","onClick","srcLargeImage","Notification","message","Button","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","searchQuery","page","key","perPage","axios","get","then","response","data","hits","App","images","loading","error","largeImageURL","fetchImages","imagesApi","prevState","catch","finally","handleSearchFormSubmit","query","setLargeImage","url","console","log","prevProps","Object","keys","length","scrollTo","top","document","documentElement","scrollHeight","behavior","map","image","id","webformatURL","color","height","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c9cf2990.chunk.js","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport './SearchBar.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({\n      inputValue: ''\n    })\n  };\n\n  render() {\n    return ( <\n      header className = \"Searchbar\" >\n      <\n      form onSubmit = {\n        this.handleSubmit\n      }\n      className = \"SearchForm\" >\n      <\n      button type = \"submit\"\n      className = \"SearchForm-button\" >\n      <\n      span className = \"SearchForm-button-label\" > Search < /span>{' '} <\n      /button>\n\n      <\n      input value = {\n        this.state.inputValue\n      }\n      onChange = {\n        this.handleChange\n      }\n      className = \"SearchForm-input\"\n      type = \"text\"\n      autoComplete = \"off\"\n      autoFocus placeholder = \"Search images and photos\" /\n      >\n      <\n      /form>{' '} <\n      /header>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './ImageGallery.css';\n\nexport default class ImageGallery extends Component {\n    render() {\n        return <ul className=\"ImageGallery\">{this.props.children}</ul>;\n    }\n}\n","import React, {\n    Component\n} from 'react';\nimport './ImageGalleryItem.css';\n\nexport default class ImageGalleryItem extends Component {\n    // componentDidMount() {\n    //     console.log(this.props.onClick);\n    // }\n\n    // showModal = (id) => {\n    //     console.log(\"Показать модалку\");\n    //     console.log('ID:', id);\n    // }\n\n\n    render() {\n        return ( <\n            li className = \"ImageGalleryItem\" >\n            <\n            img src = {\n                this.props.src\n            }\n            alt = \"\"\n            className = \"ImageGalleryItem-image\"\n            onClick = {\n                () => {\n                    this.props.onClick(this.props.srcLargeImage)\n                }\n            }\n            / > < /\n            li >\n        );\n    }\n}","import React from 'react';\n\nexport default function Notification({\n  message\n}) {\n  return <p > {\n    message\n  } < /p>\n}","import React, {\n  Component\n} from 'react';\nimport './Button.css';\n\n\nexport default class Button extends Component {\n\n\n\n  render() {\n    return ( <\n      button type = \"button\"\n      className = \"Button\"\n      onClick = {\n        this.props.onClick\n      } > Load more < /button>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\nimport './Modal.css';\n\n\n\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleKeyDown = e => {\n    if (e.code === \"Escape\") {\n      this.props.onClose(null);\n\n    }\n  }\n  render() {\n    return ( <\n      div className = \"Overlay\"\n      onClick = {\n        () => {\n          this.props.onClose(null)\n        }\n      } >\n      <\n      div className = \"Modal\" >\n      <\n      img src = {\n        this.props.src\n      }\n      alt = \"\" / >\n      <\n      /div> < /\n      div >\n    );\n  }\n}","import axios from 'axios';\n\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\n\n\n  const key = '13248585-0966523de6c8b046532b25512';\n  const perPage = 12;\n\n\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n    )\n    .then(response => response.data.hits);\n\n}\n\nexport default {\n  fetchImagesWithQuery,\n};","import React, {\n  Component\n} from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Notification from './components/Notification';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport imagesApi from './services/imagesApi';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n{\n  /* <Searchbar>, <ImageGallery>, <ImageGalleryItem>, <Loader>, <Button>  <Modal></Modal> */\n}\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    key: '13248585-0966523de6c8b046532b25512',\n    error: null,\n    searchQuery: '',\n    page: 1,\n    largeImageURL: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n\n    if (\n      prevState.images !== this.state.images &&\n      Object.keys(prevState.images).length !== 0\n    ) {\n      // const hello = prevState.images;\n      // console.log('HERE:', Object.keys(hello).length === 0);\n      // console.log(\"NEN:\", prevState.images);\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchImages = () => {\n    const {\n      searchQuery,\n      page\n    } = this.state;\n\n    this.setState({\n      loading: true,\n    });\n\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error =>\n        this.setState({\n          error,\n        }),\n      )\n      .finally(() =>\n        this.setState({\n          loading: false,\n        }),\n      );\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      images: [],\n      page: 1,\n    });\n  };\n\n  // showModal = () => {\n  //   this.setState({\n  //     showModal: !this.state.showModal\n  //   })\n\n  // }\n\n  setLargeImage = url => {\n    this.setState({\n      largeImageURL: url,\n    });\n    console.log(\"Event\");\n    // console.log('HERE:', this.state.largeImageURL);\n  };\n\n  render() {\n    const {\n      error,\n      loading,\n      images,\n      largeImageURL\n    } = this.state;\n\n    return ( <\n        >\n        {\n          largeImageURL && ( <\n            Modal src = {\n              largeImageURL\n            }\n            onClose = {\n              this.setLargeImage\n            }\n            />\n          )\n        } <\n        Searchbar onSubmit = {\n          this.handleSearchFormSubmit\n        }\n        />{' '} {\n        error && < Notification message = {\n          `Wooops ${error.message}`\n        }\n        />}{' '} {\n        images.length > 0 && ( <\n          ImageGallery > {\n            ' '\n          } {\n            this.state.images.map(image => ( <\n              ImageGalleryItem key = {\n                image.id\n              }\n              src = {\n                image.webformatURL\n              }\n              srcLargeImage = {\n                image.largeImageURL\n              }\n              onClick = {\n                this.setLargeImage\n              }\n              />\n            ))\n          } {\n            ' '\n          } <\n          /ImageGallery>\n        )\n      } {\n        ' '\n      } {\n        loading && ( <\n          Loader type = \"Bars\"\n          color = \"#00BFFF\"\n          height = {\n            100\n          }\n          width = {\n            100\n          }\n          />\n        )\n      } {\n        ' '\n      } {\n        images.length > 0 && !loading && ( <\n          Button onClick = {\n            this.fetchImages\n          }\n          />\n        )\n      } {\n        ' '\n      } <\n      />\n  );\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// console.log(App);\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}